
=====
4x4x4
=====
- TPR solver
    - Testing with the following
        ./usr/bin/rubiks-cube-solver.py --state DRFDFRUFDURDDLLUFLDLLBLULFBUUFRBLBFLLUDDUFRBURBBRBDLLDURFFBBRUFUFDRFURBUDLDBDUFFBUDRRLDRBLFBRRLB --cpu-tsai

    - TPR reduces centers in 26 moves
    - https://alg.cubing.net/?puzzle=4x4x4&setup=F2-_U-_F2-_D_U-_F2-_D_L2-_U2-_B-_D-_R_F-_D_B-_L-_B_F_L-_R_Uw_L-_B_D-_L_B-_Uw-_B-_Dw_B2-_L_U_D-_B2-_L-_Dw-_R_U-_B_R_D-_Rw_B2-_D_R-_B_D-_B_Rw-_F2-_D-_Fw2-_L_Dw2-_F_L_Bw2-_D-_Lw_U-_Lw-_Dw-_F-_Bw_U_Lw2-_Uw2-_R-_Uw&alg=Rw2_B_R-_Fw-_L-_Uw_Rw_%2F%2F_end_of_phase1%0AUw-_Rw2_B_R2_Uw_R-_%2F%2F_end_of_phase2%0AB-_F-_Fw2_R_B-_Uw2_R_U2_B-_Uw2_R-_Rw2_Uw2_x-_y2_%2F%2F_end_of_phase3

    - where mine takes 34 moves
https://alg.cubing.net/?puzzle=4x4x4&setup=R2-_U_L2-_F2-_R2-_F2-_D-_F2-_R2-_U2-_R_B-_L_R-_B2-_U_L_R2-_U2-_B2-_Lw2-_B2-_Dw2-_F2-_D2-_Lw2-_U-_F-_Lw2-_L2-_D_Lw2-_B_Uw2-_F2-_U_R-_Rw-_Fw2-_Rw-_D2-_F-_Uw2-_B_L_Fw_B-_U-_Rw_Fw2-_R-_F2-_U2-_Fw&alg=Fw-_U2_F2_R_Fw2_Rw-_U_B_Fw-_L-__%2F%2F_end_of_phase1%0AB-_Uw2_F_D2_Rw_Fw2_Rw_R__%2F%2F_end_of_phase2%0AU-_F2_Uw2_B-_Lw2_D-_L2_Lw2_F_U_Lw2_D2_F2_Dw2_B2_Lw2_%2F%2F_end_of_phase3%0AB2_U2_R2_L-_U-_B2_R_L-_B_R-_U2_R2_F2_D_F2_R2_F2_L2_U-_R2

    - The difference is the TPR solver finds 10k phase1 solutions and keeps the best 500 (the
      ones with the lowest phase2 centers heuristic).  It then searches for a phase2 solution
      for those 500 phase1 solutions, it does this by starting with a very low IDA threshold
      and incrementing it by one after trying to find a solution for all 500 scenarios. It then
      keeps the best 100 phase2 solutions and does the same basic process for finding the best
      phase2 + phase3 combo.

      I am unable to get phase2 to run fast enough to do this though. TPR does some pruning
      that I do not understand. This is the skipAxis2 stuff...need to wrap my head around this.

      Note that my phase1 does EO where all edges are oriented correctly.  I do this just to speed
      up phase2 where it is looking for edges to be EO but in any orientation.

      Long term I think bidir IDA is the way to go here, we could just combine phase 1 and phase 2
      (which the TPR solver is somewhat doing)

- Add "cube.cpu_mode = 'tsai'" to test.py and run this overnight
time ./utils/test.py --test-cubes utils/test_cubes.json.small --size 4x4x4


- edge pairing table is building to 11-deep on LJs machine

=====
5x5x5
=====
- edge pairing is still awful...revisit lookup tables but with pattern2 approach
    - see ac5a482e45315345db438b61887c240e5e6732d1

- tsai today is
    - stage UD centers
    - stage LR centers (and in turn FB)
    - phase2 starts (solve LR centers and do EO)

    we could save a lot of steps by doing
    - stage UD centers
    - phase2 (solve LR centers and do EO)
    - could always build the full LRFB prube table (165 million entries) if IDA is slow

- tsai phase3 needs to be finished
    - pair edges at LB, LF, RB, RF
    - LFRB centers must be vertical strips

- tsai phase4
    - restrict F, F', B, B' to preserved the 4 edges
    - solve centers and finish reduction


=====
6x6x6
=====
- file bug to try to improve IDA for step20 to get away from "fake_move" solution


=====
7x7x7
=====
step80...we spend 40+ moves in this phase
    - build the main table out to 6-deep

    - we solve LR and then FB prune to speed up step80...can we avoid
      this with the extra entries of a 6-deep table? Combine these on
      LJs machine and see how crazy big it is.

    - the step80 table could be converted to hex to make it much smaller
      Would also chop out the "x"s

    - build a bunch of 24 million entry prune tables?

    - ./usr/bin/rubiks-cube-solver.py --state LLDBLFDRRFDUBFLLLFLLDFLDUBRULFLFDRDRUBBUDBFLFRUBFLDBFRDRFLLRBDUUFRFURDDDBRRLDUDUBLRLLBUDRUDBUUUUBUUDLDFRURFFUFURRRDLBRFLLUFUULRUBRRURULFUBUURLDBRBDBFRLULLFLDLFRRDLRBFDBBFDDUDRBBUUFLBFBLRDDDBRFLBURFDDRBDRBRLURFUDDUFBBFBFLLRFFLLRDFDBBFBRFDLLURUFDDFLFDFBDFFUBDBRBUDDDBLFBLBRBRURFLBBULLDFURUBBLURFU


=====
8x8x8
=====
LOW - Add support in prevent_OLL()


=================
bidirectional IDA
=================
    - would open a lot of doors in terms of tackling much larger IDA searches
        - first to try is staging all 5x5x5 centers via one phase
        - second to try is staging all 5x5x5 centers via one phase
        - combine phases 1 and 2 of tsai?

    - start from a solved cube and work your way back to the scrambled cube

    - requires us to build prune tables for each scrambled cube
        - for 4x4x4 staging centers we can do this in ~20 minutes in python
        - if we only build it out 4 steps deep we can do it in ~20s
        - so this would have to be done in C and even then it would still
          take some time.  I think this is a strategy that could only be
          used in a fewest moves challenge given how long it will take to
          produce solutions.


./usr/bin/rubiks-cube-solver.py
- test solving centers without staging (no bidir here)
2018-01-03 00:13:50,302 RubiksCube444.py     INFO: 4x4x4: Start of Phase1
2018-01-03 00:13:50,304   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold range 7->99
2018-01-03 00:13:50,744   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold 7, explored 37 branches, took 439ms
2018-01-03 00:13:53,218   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold 8, explored 527 branches, took 0:00:02.473736
2018-01-03 00:14:09,617   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold 9, explored 15122 branches, took 0:00:16.399350
2018-01-03 00:18:13,918   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold 10, explored 381467 branches, took 0:04:04.300609
2018-01-03 01:02:29,371   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA found match 8 steps in, f_cost 13 (8 + 5)
2018-01-03 01:02:29,380   LookupTable.py     INFO: 4x4x4-step100-ULFRBD-centers-solve-unstaged: IDA threshold 11, explored 4207868 branches, took 0:44:15.460385 (0:48:39.077432 total)
2018-01-03 01:02:29,381 RubiksCube444.py     INFO: 4x4x4: End of Phase1, 14 steps in


https://alg.cubing.net/?puzzle=4x4x4&setup=B2-_U-_R2-_U_B2-_D-_F2-_D-_L2-_F2-_L_D-_B-_U2-_R-_D_U-_R2-_B_L-_F_Fw_L2-_U-_L_B-_U_L_B2-_Fw-_D2-_R2-_D-_F-_B2-_Rw_F_L2-_U-_F-_L-_U_L_Rw-_D-_R-_B_U2-_B-_Uw-_Bw_U_Bw-_Lw-_Bw_U-_Lw2-_Uw_B2-_R2-_Lw2-_Uw2-_Fw&alg=Fw-_Uw2_Lw2_R2_B2_Uw-_Lw2_U_Bw-_Lw_Bw_U-_Bw-_Uw_B_U2_B-_R_D_Rw_L-_U-_L_F_U_L2_F-_Rw-_B2_F_D_R2_D2_Fw_B2_L-_U-_B_L-_U_L2_Fw-_F-_L_B-_R2_U_D-_R_U2_B_D_L-_F2_L2_D_F2_D_B2_U-_R2_U_B2

Solution: Fw' Uw2 Lw2 R2 B2 Uw' Lw2 U Bw' Lw Bw U' Bw' Uw B U2 B' R D Rw L' U' L F U L2 F' Rw' B2 F D R2 D2 Fw B2 L' U' B L' U L2 Fw' F' L B' R2 U D' R U2 B D L' F2 L2 D F2 D B2 U' R2 U B2
14 steps to solve centers
28 steps to group edges
21 steps to solve 3x3x3
63 steps total

